/**
 * 
 */
package Logistics;

import java.util.Random;
import java.util.concurrent.locks.Lock;

/**
 * @author danie
 *
 */
public class Producer implements Runnable{

	private volatile Factory factory;
	private volatile boolean producing;
	private Lock lock;
	
	public Producer(Factory factory, Lock lock) {
		this.factory = factory;
		this.lock = lock
	}

	@Override
	public void run() {
		
		while (!Thread.interrupted()) {
			
		}
		
		Random random = new Random();
		
		
		
	}
	
	public void setProducing(boolean producing) {
		this.producing = producing;
	}
	
	
}
