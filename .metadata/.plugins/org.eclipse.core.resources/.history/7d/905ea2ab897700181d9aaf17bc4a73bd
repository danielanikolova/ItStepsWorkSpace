/**
 * 
 */
package Logistics;

import java.util.concurrent.locks.Lock;

/**
 * @author danie
 *
 */
public class Transporter implements Runnable{

	private Factory factory;
	private int trucksNumber;
	private volatile boolean transporting = false;
	private Lock lock;
	
	public Transporter(Factory factory, int truckesNumber,  Lock lock) {
		this.factory = factory;
		this.trucksNumber = truckesNumber;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
	
	public void removeTruckes(int truckesToRemove)
	{
		if (truckesToRemove>=trucksNumber) {
			trucksNumber = 0;
		}else {
			trucksNumber-=truckesToRemove;
		}
	}
	
	public void addTrucks(int truckesToAdd) 
	{
		trucksNumber+=truckesToAdd;
	}
	
	public void setTransporting(boolean transporting) 
	{
		this.transporting = transporting;
	}
}
